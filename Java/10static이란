# main 메소드에는 무조건 static 이 붙어야 한다.
# 클래스 안의 멤버에 static 이 붙으면 그 멤버는 클래스의 객체를 선언하지 않고 바로 콜해서 사용할 수 있다.

--------------------------------------------------------------------------------------------

# static 이 붙은 멤버들은 프로그램이 시작될 때 우선 메모리에 할당이 되어 new 를 통한 객체 초기화가 필요 없다.
# main 메소드에 static이 붙어야 하는 이유는 main 메소드가 프로그램이 처음 시작되는 메소드이기 때문이다.
# main 메소드보다 빨리 실행될 수 있는 코드가 없기 때문에 static을 사용하지 않으면 main 메소드의 메모리를 할당해줄 부분이 존재하지 않는다. 
# 프로그램 시작과 함께 main 메소드의 메모리를 할당해야 한다.

# 앞에서 사용한 classexample 클래스의 mint에 있던 static을 제거하면 컴파일 진행시 오류가 발생한다. 
# 이는 print 메소드에 static이 사용되었지만 mint 변수에는 static이 사용되지 않았기 때문에 발생하는 오류이다. static 사용시 유의해야 한다.

import java.io.*;
class Main {
	public static void main(String[] args) {
		
		ClassExample.mInt = 3;
		ClassExample.Print();
		
		ClassExample c = new ClassExample();		
		c.mInt = 20;
		c.Print();
	}
}


class ClassExample {
	
	public static int mInt;
	
	public static void Print() {
		System.out.println( mInt );
	}
	
}

